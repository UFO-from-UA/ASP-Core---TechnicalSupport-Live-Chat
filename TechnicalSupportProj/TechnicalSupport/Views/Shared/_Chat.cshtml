<div id="Modal" class="modal">
    <div class="modal-content">
        <div class="modal-header">
            <h2>Do you want to complete this dialog?</h2>
            <span class="closeModal">&times;</span>
        </div>
        <div class="modal-body">
            <div class="row">
                <label>Please select a reason <span class="req">*</span></label>
                <div class="reason-buttons">
                    <ul>
                        <li>
                            <button onclick="SetReasone(this)" class="modal-status btn btn-warning" tabindex="1" data-reason="1"><h3>Not solved</h3></button>
                        </li>
                        <li>
                            <button onclick="SetReasone(this)" class="modal-status btn btn-success" tabindex="2" data-reason="3"><h3>Solved</h3></button>
                        </li>
                        <li>
                            <button onclick="SetReasone(this)" class="modal-status btn btn-info" tabindex="3" data-reason="2"><h3>Waiting solution</h3></button>
                        </li>
                    </ul>
                </div>
            </div>

            <div class="row">
                <label for="email">E-mail</label>
                <input type="email" name="email" id="email" class="txt" tabindex="4" placeholder=" address@mail.ru" required autocomplete="on">
            </div>
        </div>
        <div class="modal-footer">
            <button class="modalConfirn btn btn-5" tabindex="5" id="modalYes"><h3>Yes</h3></button>
            <button class="modalConfirn btn btn-5" tabindex="6" id="modalNo"><h3>No</h3></button>
        </div>
    </div>
</div>


<div class="chat header">
    <div>Welcome</div>

    <span class="enterName"><i class="fas fa-user-edit"></i>;</span>
    <span class="enterEmail"><i class="fas fa-envelope"></i></span>
    <span class="closeChat">&times;</span>
    <span class="minimizeChat">&#128469;</span>
</div>

<div class="chat-messages" id="chat-messages">
    <div class="chat first">
        <i class="fas fa-users"></i>
        <span class="name">Name</span>
        <p class="chat">Sweet! So, what do you wannweet! So, what do you wannweet! So, what do you wannweet! So, what do you wanna do </p>
        <span class="time">11:02</span>
    </div>

    <div class="chat second">
        <img src="~/Icons/Footer/telegram.png" alt="Avatar" class="right">
        <span class="name">Name2</span>
        <p class="chat">Nah, I dunnoweet! So, coding perhaps?</p>
        <span class="time">11:05</span>
    </div>

    <div class="chat first">
        <i class="fas fa-users"></i>
        <span class="name">Name</span>
        <p class="chat">Sweet! So, what do you wt! So, what do you wanna do </p>
        <span class="time">11:02</span>
    </div>

</div>


<div class="chat footer">
    @*<div class="row">
            <div class="col-md-1">
                <button>1</button>
            </div>
            <div class="col-md-1">
                <button>2</button>
            </div>
            <div class="col-md-1">
                <button>3</button>
            </div>
        </div>*@
    <div class="chat-input">
        <input type="text" id="chat-input" placeholder="Send a message..." />
        <button type="submit" class="chat-submit" id="chat-submit"><i class='fas fa-paper-plane fa-lg'></i></button>
    </div>
    @*<div class="row">
            <button>Send</button>
        </div>*@

</div>


<script>
    const hubConnection = new signalR.HubConnectionBuilder()
        .withUrl("/chat")
        .withAutomaticReconnect()
        .build();


    let userName = "";
  ;
    // получение сообщения от сервера
    hubConnection.on("Receive", function (mes) {


        let servmessage = document.createElement("div");

        if (mes.senderType == "in") {

            servmessage.className = "chat first";
        }
        else {

            servmessage.className = "chat second";

        }

      

      
        servmessage.appendChild(document.createTextNode('Name:' + mes.dialogId));
        // создает элемент <p> для сообщения пользователя
        let elem = document.createElement("p");
        elem.appendChild(document.createTextNode(mes.text));
        servmessage.appendChild(elem);

      
     


        var firstElem = document.getElementById("chat-messages").firstChild;
        document.getElementById("chat-messages").insertBefore(servmessage, firstElem);

    });
    hubConnection.serverTimeoutInMilliseconds = 100000; // 100 second


    hubConnection.onreconnecting((error) => {
        const status = `Connection lost due to error "${error}". Reconnecting.`;
        document.getElementById("messageInput").disabled = true;
        document.getElementById("sendButton").disabled = true;
        document.getElementById("connectionStatus").innerText = status;
    });

    hubConnection.onreconnected((connectionId) => {
        const status = `Connection reestablished. Connected.`;
        document.getElementById("messageInput").disabled = false;
        document.getElementById("sendButton").disabled = false;
        document.getElementById("connectionStatus").innerText = status;
    });

  



  
        // отправка сообщения от простого пользователя
       

    document.getElementById("chat-submit").addEventListener("click", function(e) {
            let text = document.getElementById("chat-input").value;
            hubConnection.invoke("Send", { "Text": text, "Name": text, "SenderType": "in" });
        });
  
    
    hubConnection.start();
</script>